#    the S3 bucket you're using for file uploads
bower_components
# http://addyosmani.com/blog/checking-in-front-end-dependencies/
#    e.g., your local development database, or
# tasks and adapters.
# committing settings which will smash the local 
# need to be recompiled anyway.
# 
# Local Configuration
npm-debug.log
# since different developers may be working on
nbproject
###############  .gitignore   ##################
# related ecosystem.
# your repository.  It allows you to configure your
*.pid
#    your git repository.
dump.rdb
#    `git pull`
# Some reasonable defaults are included below,
# consider including your node_modules and
# Common files generated by Node, NPM, and the
*#
# Sails.js / Waterline / Grunt
#
# bower_components directory in your git repo,
# settings of  other developers on your team. 
# (credit Addy Osmani, @addyosmani)
# http://www.futurealoof.com/posts/nodemodules-in-git.html
# This file is only relevant if you are using git.
# Miscellaneous
# Files generated by Sails and Grunt, or related
*.seed
# be ignored by git.  This keeps random crap and
# About bower_components dir, you can see this:
# Common files generated by text editors,
# but during development, its best to exclude it,
.DS_STORE
#    e.g., your personal API keys or passwords.
*.out
# app for your machine without accidentally
# More on that here about node_modules dir:
# Dependencies
# Explicitly ignore files which contain:
#    to have to change every time you do a 
# (credit Mikeal Rogers, @mikeal)
# When releasing a production app, you may 
.idea
node_modules
config/local.js
*.log
.tmp
################################################
config/env/production.js
# but, of course, you should modify/extend/prune
#    Basically, anything that would be annoying
# 1. Sensitive information you'd rather not push to
.node_history
# to fit your needs!
# and sensitive credentials from being uploaded to 
# operating systems, file systems, etc.
lib-cov
# different kernels, where dependencies would
# Node.js / NPM
.netbeans
# Files which match the splat patterns below will
*~
#    development.
# 2. Environment-specific configuration